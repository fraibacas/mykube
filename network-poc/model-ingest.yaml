apiVersion: v1
kind: Service
metadata:
    name: model-ingest
    labels:
        app: model-ingest
spec:
    ports:
    - port: 80
      targetPort: 80
    type: NodePort
    selector:
        app: model-ingest
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
    name: model-ingest
spec:
    replicas: 2
    selector:
      matchLabels:
        app: model-ingest
    template:
        metadata:
          labels:
            app: model-ingest
            tier: service
        spec:
            containers:
            - name: model-ingest
              image: eamonwoortman/alpine-python-curl-zip
              command: ["python"]
              args: ["./server.py"]
              env:
                - name: MICROSERVICE
                  valueFrom:
                    configMapKeyRef:
                      name: model-ingest-env
                      key: svc.name
              workingDir: /server
              ports:
              - containerPort: 80
              volumeMounts:
              - mountPath: /server
                name: nfs-share
            volumes:
            - name: nfs-share
              hostPath:
                path: /opt/kdata
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: model-ingest-env
  namespace: default
data:
  svc.name: model-ingest
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata: 
  name: model-ingest
  annotations: 
    kubernetes.io/ingress.class: traefik
  labels:
    ingress-tier: service
spec:
  rules:
  - http: 
      paths:
      - path: /api/model-ingest
        backend: 
          serviceName: model-ingest
          servicePort: 80